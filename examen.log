Segundo constructor
Archivo: C:\Users\marco\OneDrive\Escritorio\Lenguajes y automatas 1\Sintaxis_1\examen.cpp
26/05/2022 11:44:48 p. m.
# | Caracter
include | Identificador
< | OperadorRelacional
iostream | Identificador
> | OperadorRelacional
# | Caracter
include | Identificador
< | OperadorRelacional
stdio | Identificador
. | Caracter
h | Identificador
> | OperadorRelacional
# | Caracter
include | Identificador
< | OperadorRelacional
conio | Identificador
. | Caracter
h | Identificador
> | OperadorRelacional
float | TipoDato
resultado | Identificador
; | FinSentencia
int | TipoDato
a | Identificador
, | Caracter
b | Identificador
, | Caracter
c | Identificador
, | Caracter
d | Identificador
; | FinSentencia
char | TipoDato
opcion | Identificador
; | FinSentencia
float | TipoDato
radio | Identificador
, | Caracter
altura | Identificador
, | Caracter
x | Identificador
; | FinSentencia
void | Identificador
main | Identificador
( | Caracter
) | Caracter
{ | Caracter
printf | Identificador
( | Caracter
"radio: " | Cadena
) | Caracter
; | FinSentencia
scanf | Identificador
( | Caracter
"%f" | Cadena
) | Caracter
; | FinSentencia
printf | Identificador
( | Caracter
"altura: " | Cadena
) | Caracter
; | FinSentencia
scanf | Identificador
( | Caracter
"%f" | Cadena
) | Caracter
; | FinSentencia
printf | Identificador
( | Caracter
"volumen: " | Cadena
) | Caracter
; | FinSentencia
if | Condicion
( | Caracter
radio | Identificador
+ | OperadorTermino
10 | Numero
> | OperadorRelacional
altura | Identificador
* | OperadorFactor
200 | Numero
) | Caracter
{ | Caracter
printf | Identificador
( | Caracter
"hola" | Cadena
) | Caracter
; | FinSentencia
if | Condicion
( | Caracter
1 | Numero
== | OperadorRelacional
1 | Numero
) | Caracter
{ | Caracter
while | Ciclo
( | Caracter
4 | Numero
== | OperadorRelacional
4 | Numero
) | Caracter
do | Ciclo
{ | Caracter
a | Identificador
= | Asignacion
0 | Numero
; | FinSentencia
} | Caracter
while | Ciclo
( | Caracter
6 | Numero
== | OperadorRelacional
6 | Numero
) | Caracter
; | FinSentencia
} | Caracter
else | Condicion
if | Condicion
( | Caracter
2 | Numero
== | OperadorRelacional
2.0 | Numero
) | Caracter
{ | Caracter
b | Identificador
= | Asignacion
"hola mundo" | Cadena
; | FinSentencia
x | Identificador
= | Asignacion
( | Caracter
3 | Numero
+ | OperadorTermino
5 | Numero
) | Caracter
* | OperadorFactor
8 | Numero
- | OperadorTermino
( | Caracter
10 | Numero
- | OperadorTermino
4 | Numero
) | Caracter
/ | OperadorFactor
c | Identificador
; | FinSentencia
} | Caracter
else | Condicion
if | Condicion
( | Caracter
3 | Numero
== | OperadorRelacional
3 | Numero
) | Caracter
{ | Caracter
c | Identificador
= | Asignacion
a | Identificador
; | FinSentencia
} | Caracter
else | Condicion
scanf | Identificador
( | Caracter
"%f" | Cadena
) | Caracter
; | FinSentencia
} | Caracter
c | Identificador
= | Asignacion
a | Identificador
+ | OperadorTermino
( | Caracter
b | Identificador
+ | OperadorTermino
c | Identificador
) | Caracter
; | FinSentencia
c | Identificador
= | Asignacion
a | Identificador
+ | OperadorTermino
b | Identificador
* | OperadorFactor
c | Identificador
; | FinSentencia
b | Identificador
= | Asignacion
"Hello world" | Cadena
; | FinSentencia
switch | Condicion
( | Caracter
a | Identificador
) | Caracter
{ | Caracter
case | Identificador
1 | Numero
: | Caracter
printf | Identificador
( | Caracter
"diga un numero: " | Cadena
) | Caracter
; | FinSentencia
scanf | Identificador
( | Caracter
"%f" | Cadena
) | Caracter
; | FinSentencia
printf | Identificador
( | Caracter
"diga un numero: " | Cadena
) | Caracter
; | FinSentencia
scanf | Identificador
( | Caracter
"%f" | Cadena
) | Caracter
; | FinSentencia
break | Identificador
; | FinSentencia
case | Identificador
2 | Numero
: | Caracter
printf | Identificador
( | Caracter
"dos" | Cadena
) | Caracter
; | FinSentencia
printf | Identificador
( | Caracter
"tres" | Cadena
) | Caracter
; | FinSentencia
default | Identificador
: | Caracter
printf | Identificador
( | Caracter
"otro" | Cadena
) | Caracter
; | FinSentencia
printf | Identificador
Error de sintaxis, se espera un } en linea: 49
